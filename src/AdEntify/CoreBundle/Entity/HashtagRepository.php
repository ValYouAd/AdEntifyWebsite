<?php

namespace AdEntify\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * HashtagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HashtagRepository extends EntityRepository
{
    /**
     * Create hashtag if not exist and increment used count
     *
     * @param $name
     * @return Hashtag|object
     */
    public function createIfNotExist($name)
    {
        $name = str_replace(array(' ', '#'), '', trim($name));
        if (is_numeric($name)) {
            return $this->getEntityManager()->getRepository('AdEntifyCoreBundle:Hashtag')->find($name);
        } else {
            $hashtag = $this->findOneBy(array(
                'name' => strtolower($name)
            ));
            if ($hashtag) {
                $hashtag->setUsedCount($hashtag->getUsedCount() + 1);
                $this->getEntityManager()->merge($hashtag);
            } else {
                $hashtag = new Hashtag();
                $hashtag->setName($name)->setUsedCount(1);
                $this->getEntityManager()->persist($hashtag);
            }
        }
        return $hashtag;
    }

    /**
     * Extract hashtags from string
     *
     * @param $value
     * @return array
     */
    public function getHashtagsFromString($value)
    {
        $hashtags = array();
        $pattern = '/(?:^|\s)(\#\w+)/';
        preg_match_all($pattern, $value, $matches, PREG_OFFSET_CAPTURE);
        if (count($matches[0]) > 0) {
            foreach($matches[0] as $match) {
                $hashtag = $this->createIfNotExist(str_replace('#', '', $match[0]));
                if ($hashtag)
                    $hashtags[] = $hashtag;
            }
        }
        return $hashtags;
    }
}
